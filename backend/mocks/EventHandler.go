// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// EventHandler is an autogenerated mock type for the EventHandler type
type EventHandler struct {
	mock.Mock
}

// Execute provides a mock function with given fields: event, c
func (_m *EventHandler) Execute(event Event, c *ClientInterface) error {
	ret := _m.Called(event, c)

	if len(ret) == 0 {
		panic("no return value specified for Execute")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(Event, *ClientInterface) error); ok {
		r0 = rf(event, c)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewEventHandler creates a new instance of EventHandler. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewEventHandler(t interface {
	mock.TestingT
	Cleanup(func())
}) *EventHandler {
	mock := &EventHandler{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
