// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import (
	websocket "github.com/gorilla/websocket"
	mock "github.com/stretchr/testify/mock"
)



// factoryClientInterface is an autogenerated mock type for the factoryClientInterface type
type factoryClientInterface struct {
	mock.Mock
}

// NewClient provides a mock function with given fields: conn, nickname, sala, manager
func (_m *factoryClientInterface) NewClient(conn *websocket.Conn, nickname string, sala string, manager *ManagerInterface) *ClientInterface {
	ret := _m.Called(conn, nickname, sala, manager)

	if len(ret) == 0 {
		panic("no return value specified for NewClient")
	}

	var r0 *ClientInterface
	if rf, ok := ret.Get(0).(func(*websocket.Conn, string, string, *ManagerInterface) *ClientInterface); ok {
		r0 = rf(conn, nickname, sala, manager)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ClientInterface)
		}
	}

	return r0
}

// newFactoryClientInterface creates a new instance of factoryClientInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newFactoryClientInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *factoryClientInterface {
	mock := &factoryClientInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
