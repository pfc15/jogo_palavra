// Code generated by mockery v2.53.3. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// factoryManagerInterface is an autogenerated mock type for the factoryManagerInterface type
type factoryManagerInterface struct {
	mock.Mock
}

// new_manager provides a mock function with no fields
func (_m *factoryManagerInterface) new_manager() *ManagerInterface {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for new_manager")
	}

	var r0 *ManagerInterface
	if rf, ok := ret.Get(0).(func() *ManagerInterface); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*ManagerInterface)
		}
	}

	return r0
}

// newFactoryManagerInterface creates a new instance of factoryManagerInterface. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func newFactoryManagerInterface(t interface {
	mock.TestingT
	Cleanup(func())
}) *factoryManagerInterface {
	mock := &factoryManagerInterface{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
